<!doctype html>
<html lang="en">
  <head>
    <title><%= @config["node"].keys.first%></title>
    <meta charset="utf-8"/>
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
    <link rel="stylesheet" href="css/reveal.css">
    <link rel="stylesheet" href="css/theme/black.css" id="theme">
    <link rel="stylesheet" href="lib/css/zenburn.css">
    <link rel="stylesheet" href="custom.css">
  </head>
  <body>
    <div class="reveal">
    <div class="slides">
    <% @config["node"].values.first["node"].each do |title, node|%>
        <section>
        <h1><%= html_escape title %></h1>
        <% node["node"].each do |title, node| %>
          <% if !node["icon"] %>
            <section>
              <h2><%= title %></h2>
              <% node["node"].each do |title, node| %>
                <% @node = node ; @title = title%>
                <%= @richcontent = node["richcontent"] if node  %>
                <%= compile "erb/content.erb" %>
              <% end if node["node"] %>
            </section>
          <% end %>
        <% end if node["node"] %>
      </section>
    <% end %>
    </div>
    </div>
    <script src="lib/js/head.min.js"></script>
    <script src="js/reveal.js"></script>
    <script>
      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({ controls: true,
                          progress: true,
                          history: true,
                          center: true,
                          transition: 'slide', // none/fade/slide/convex/concave/zoom

      // Optional reveal.js plugins
      dependencies: [
        { src: 'lib/js/classList.js', 
          condition: function() { return !document.body.classList; } },
        { src: 'plugin/markdown/marked.js', 
          condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
        { src: 'plugin/markdown/markdown.js', 
          condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
        { src: 'plugin/highlight/highlight.js', 
          async: true, 
          condition: function() { return !!document.querySelector( 'pre code' ); }, 
          callback: function() { hljs.initHighlightingOnLoad(); } },
        { src: 'plugin/zoom-js/zoom.js', async: true },
        { src: 'plugin/notes/notes.js', async: true }
      ]
      });
    </script>
  </body>
</html>
